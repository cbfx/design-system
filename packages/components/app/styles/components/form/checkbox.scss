//
// FORM > CHECKBOX
//
// properties within each class are sorted alphabetically
//

@use "../../mixins/focus-ring" as *;

$hds-form-checkbox-control-size: 16px;
$hds-form-checkbox-control-border-radius: 3px;

// FIELD

.hds-form-checkbox {
  display: flex;
  align-items: start;
}

.hds-form-checkbox__control-wrapper {
  flex: none;
}

.hds-form-checkbox__text-wrapper {
  flex: 1 0 auto;
  margin-left: 0.5rem;
}

// STANDALONE CONTROL

.hds-form-checkbox-standalone {
  position: relative;
  isolation: isolate; // used to create a new stacking context
}

// control (hidden)

.hds-form-checkbox-standalone__control {
  position: absolute;
  z-index: 1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  outline: none;
  border: none;
  background-color: transparent;
  color: transparent;
  opacity: 0;
  appearance: none;
  cursor: pointer;
}

// facade (visible)

.hds-form-checkbox-standalone__facade {
  border-radius: $hds-form-checkbox-control-border-radius;
  border-style: solid;
  border-width: 1px;
  display: block;
  height: $hds-form-checkbox-control-size;
  position: relative;
  width: $hds-form-checkbox-control-size;

  // "TICK" ICON
  svg {
    bottom: 0;
    display: none;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0;
  }

  &::before {
    $border-width: 2px;
    $shift: $border-width + 1px; // we need to take in account also the border width of the parent
    border-radius: $hds-form-checkbox-control-border-radius + $border-width;
    border-width: $border-width;
    bottom: -$shift;
    content: "";
    left: -$shift;
    margin: auto;
    position: absolute;
    right: -$shift;
    top: -$shift;
  }

  // STATUS

  // base (default)

  :not(:checked) + & {
    background-color: var(--token-color-surface-primary);
    border-color: var(--token-color-border-primary);
    box-shadow: var(--hds-elevation-inset-box-shadow);
  }
  :checked + & {
    background-color: var(--token-color-palette-blue-200);
    border-color: var(--token-color-palette-blue-400);
    color: var(--token-color-foreground-high-contrast);

    svg {
      display: block;
    }
  }
  [disabled] + & {
    background-color: var(--token-color-surface-strong);
    border-color: var(--token-color-border-primary);
    box-shadow: none;
    color: var(--token-color-foreground-faint);
  }

  // hover

  :not(:checked):hover + & {
    border-color: var(--token-color-border-strong);
  }
  :checked:hover + & {
    background-color: var(--token-color-foreground-action-hover);
    border-color: var(--token-color-palette-blue-500);
  }

  // focus (same for all the states)

  :focus + & {
    border-color: var(--token-color-palette-blue-400);

    &::before {
      border-style: solid;
      border-color: var( --token-color-focus-action-external);
    }
  }

  // active

  :not(:checked):active + & {
    border-color: var(--token-color-palette-blue-400);
  }
  :checked:active + & {
    background-color: var(--token-color-foreground-action-active);
    border-color: var(--token-color-palette-blue-500);
  }
}