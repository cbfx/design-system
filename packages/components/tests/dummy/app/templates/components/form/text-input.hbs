{{page-title "Form::TextInput Component"}}

<h2 class="dummy-h2">Form::TextInput</h2>

<section>
  <h3 class="dummy-h3" id="overview"><a href="#overview">Â§</a> Overview</h3>
  <p class="dummy-paragraph">ðŸš§ TODO ðŸš§</p>
</section>

<section>
  <h3 class="dummy-h3" id="component-api"><a href="#component-api">Â§</a> Component API</h3>
  <p class="dummy-paragraph" id="component-api-form-text-input">
    Here is the API for the component:
  </p>
  <dl class="dummy-component-props" aria-labelledby="component-api-form-text-input">
    <dt>basic <code>boolean</code></dt>
    <dd>
      <p>Controls if the generated control is
        <strong>"basic"</strong>
        (only the
        <code class="dummy-code">&lt;Input&gt;</code>
        control) or a
        <strong>"field"</strong>
        (this is the default: the
        <code class="dummy-code">&lt;Input&gt;</code>
        control, with label, helper text and error, plus a wrapping container).</p>
      <p>Default: <span class="default">false</span></p>
    </dd>
    <dt>type <code>enum</code></dt>
    <dd>
      <p>
        Sets the native HTML
        <code class="dummy-code">type</code>
        of the
        <code class="dummy-code">&lt;input&gt;</code>. This list covers all the official types (see
        <a
          href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"
          target="_blank"
          rel="noopener noreferrer"
        >MDN documentation</a>)
      </p>
      <p>Acceptable values:</p>
      <ol>
        {{#each @model.TYPES as |type|}}
          <li class={{if (eq type "text") "default"}}>{{type}}</li>
        {{/each}}
      </ol>
    </dd>
    <dt>value <code>string|number|date</code></dt>
    <dd>
      <p>The input control's value</p>
    </dd>
    <dt>isInvalid <code>boolean</code></dt>
    <dd>
      <p>It applies an "invalid" appearance to the control (<em>notice: this does _not_ modify its logical validity</em>).</p>
      <p>Default: <span class="default">false</span></p>
    </dd>
    <dt>...attributes</dt>
    <dd>
      <p><code class="dummy-code">...attributes</code> spreading is supported on this component.</p>
      <p><em>Notice: the attributes will be applied to the
          <code class="dummy-code">&lt;Input&gt;</code>
          element, both for the "field" and "basic". This means you can use all the standard Ember techniques for event
          handling, validation, etc.</em></p>
    </dd>
  </dl>

  <h4 class="dummy-h4">Contextual components</h4>
  <p class="dummy-paragraph" id="contextual-components-alert">Label, helper text and error content are passed into the
    control as yielded components, using the
    <code class="dummy-code">Label</code>,
    <code class="dummy-code">HelperText</code>,
    <code class="dummy-code">Error</code>
    keys.</p>
  <dl class="dummy-component-props" aria-labelledby="contextual-components-alert">
    <dt>&lt;[C].Label&gt; <code>yielded component</code></dt>
    <dd>
      <p>It is a container that yields its content inside the <code class="dummy-code">&lt;label&gt;</code> element.</p>
      <p>The content can be a simple string, or a more complex/structured one (in which case it inherits the text
        style).</p>
      <p>For details about its API check the
        <LinkTo @route="components.form.base-elements"><code class="dummy-code">Form::Label</code></LinkTo>
        component.</p>
      <p><em>Notice: the
          <code class="dummy-code">for</code>
          attribute of the label is automatically generated, using the
          <code class="dummy-code">controlId</code>
          value of the control.</em></p>
    </dd>
    <dt>&lt;[C].HelperText&gt; <code>yielded component</code></dt>
    <dd>
      <p>It is a container that yields its content inside the "helper text" block.</p>
      <p>The content can be a simple string, or a more complex/structured one (in which case it inherits the text
        style).</p>
      <p>For details about its API check the
        <LinkTo @route="components.form.base-elements"><code class="dummy-code">Form::HelperText</code></LinkTo>
        component.</p>
      <p><em>Notice: the
          <code class="dummy-code">id</code>
          attribute of the element is automatically generated, using the
          <code class="dummy-code">controlId</code>
          value of the control.</em></p>
    </dd>
    <dt>&lt;[C].Error&gt; <code>yielded component</code></dt>
    <dd>
      <p>ðŸš§ TODO ðŸš§</p>
      <p>For details about its API check the
        <LinkTo @route="components.form.base-elements"><code class="dummy-code">Form::Error</code></LinkTo>
        component.</p>
    </dd>
  </dl>

</section>

<section>
  <h3 class="dummy-h3" id="how-to-use"><a href="#how-to-use" class="dummy-link-section">Â§</a> How to use</h3>
  <p class="dummy-paragraph">ðŸš§ TODO ðŸš§</p>
</section>

<section>
  <h3 class="dummy-h3" id="design-guidelines"><a href="#design-guidelines" class="dummy-link-section">Â§</a>
    Design guidelines</h3>
  <p class="dummy-paragraph">ðŸš§ TODO ðŸš§</p>
  {{! UNCOMMENT THIS BLOCK (once the link and/or the image are available) }}
  {{!
  <div class="dummy-design-guidelines">
    <p class="dummy-paragraph">
      <a href="[ADD THE LINK TO THE FIGMA FILE/PAGE HERE!]" target="_blank" rel="noopener noreferrer">Figma UI Kit</a>
    </p>
    <br />
    <img class="dummy-figma-docs" src="/assets/images/form-text-input-design-usage.png" alt="" role="none" />
  </div>
  }}
</section>

<section>
  <h3 class="dummy-h3" id="accessibility"><a href="#accessibility" class="dummy-link-section">Â§</a> Accessibility</h3>
  <p class="dummy-paragraph">ðŸš§ TODO ðŸš§</p>
</section>

<section data-test-percy>
  <h3 class="dummy-h3" id="showcase"><a href="#showcase" class="dummy-link-section">Â§</a> Showcase</h3>

  <h4 class="dummy-h4">Types (native)</h4>
  <div class="dummy-form-text-input-types-grid">
    {{#each @model.TYPES as |type|}}
      <div>
        <span class="dummy-text-small">{{capitalize type}}:</span>
        <br />
        <Hds::Form::TextInput @type={{type}} @value={{type}} @basic={{true}} />
      </div>
    {{/each}}
  </div>

  <h4 class="dummy-h4">Content</h4>
  <h5 class="dummy-h5">"Basic" control</h5>
  <div class="dummy-form-text-input-base-sample">
    <div>
      <span class="dummy-text-small">Default</span>
      <br />
      <Hds::Form::TextInput @basic={{true}} />
    </div>
    <div>
      <span class="dummy-text-small">With value</span>
      <br />
      <Hds::Form::TextInput value="Lorem ipsum dolor" @basic={{true}} />
    </div>
  </div>
  <br />
  <div class="dummy-form-text-input-base-sample">
    <div>
      <span class="dummy-text-small">With custom layout</span>
      <br />
      <div class="dummy-form-text-input-content-sample-with-custom-layout">
        <span>Some content</span>
        <Hds::Form::TextInput @value="Lorem ipsum dolor" @id="my-custom-checkbox-example" @basic={{true}} />
        <label for="my-custom-checkbox-example">Custom label</label>
      </div>
    </div>
  </div>
  <h5 class="dummy-h5">"Field" control</h5>
  <div class="dummy-form-text-input-base-sample">
    <div>
      <span class="dummy-text-small">Only label</span>
      <br />
      <Hds::Form::TextInput as |C|>
        <C.Label>Lorem ipsum dolor</C.Label>
      </Hds::Form::TextInput>
    </div>
    <div>
      <span class="dummy-text-small">Label + Helper text</span>
      <br />
      <Hds::Form::TextInput as |C|>
        <C.Label>This is the label</C.Label>
        <C.HelperText>This is the helper text</C.HelperText>
      </Hds::Form::TextInput>
    </div>
    <div>
      <span class="dummy-text-small">Label + Error</span>
      <br />
      <Hds::Form::TextInput as |C|>
        <C.Label>This is the label</C.Label>
        <C.Error>This is the error</C.Error>
      </Hds::Form::TextInput>
    </div>
    <div>
      <span class="dummy-text-small">Label + Helper text + Error</span>
      <br />
      <Hds::Form::TextInput as |C|>
        <C.Label>This is the label</C.Label>
        <C.HelperText>This is the helper text</C.HelperText>
        <C.Error>This is the error</C.Error>
      </Hds::Form::TextInput>
    </div>
    <div>
      <span class="dummy-text-small">Label + Helper text + Errors</span>
      <br />
      <Hds::Form::TextInput @id="custom-id" @ariaDescribedBy="custom-describedby" as |C|>
        <C.Label>This is the label</C.Label>
        <C.HelperText>This is the helper text</C.HelperText>
        <C.Error as |error|>
          {{#each @model.SAMPLE_ERROR_MESSAGES as |message|}}
            <error.message>{{message}}</error.message>
          {{/each}}
        </C.Error>
      </Hds::Form::TextInput>
    </div>
  </div>

  <h4 class="dummy-h4">States</h4>
  <div class="dummy-form-text-input-states-grid">
    <h5 class="dummy-h5 dummy-form-text-input-states-grid__title">Base</h5>
    {{#each @model.STATES as |state|}}
      <div mock-state-value={{state}} mock-state-selector="input">
        <span class="dummy-text-small">{{capitalize state}}:</span>
        <br />
        <Hds::Form::TextInput @value="Lorem ipsum dolor" as |C|>
          <C.Label>Lorem ipsum dolor</C.Label>
        </Hds::Form::TextInput>
      </div>
    {{/each}}
    <h5 class="dummy-h5 dummy-form-text-input-states-grid__title">Disabled</h5>
    {{#each @model.STATES as |state|}}
      <div mock-state-value={{state}} mock-state-selector="input">
        <span class="dummy-text-small">{{capitalize state}}:</span>
        <br />
        <Hds::Form::TextInput @value="Lorem ipsum dolor" disabled="disabled" as |C|>
          <C.Label>Lorem ipsum dolor</C.Label>
        </Hds::Form::TextInput>
      </div>
    {{/each}}
    <h5 class="dummy-h5 dummy-form-text-input-states-grid__title">Readonly</h5>
    {{#each @model.STATES as |state|}}
      <div mock-state-value={{state}} mock-state-selector="input">
        <span class="dummy-text-small">{{capitalize state}}:</span>
        <br />
        <Hds::Form::TextInput @value="Lorem ipsum dolor" readonly="readonly" as |C|>
          <C.Label>Lorem ipsum dolor</C.Label>
        </Hds::Form::TextInput>
      </div>
    {{/each}}
    <h5 class="dummy-h5 dummy-form-text-input-states-grid__title">Invalid</h5>
    {{#each @model.STATES as |state|}}
      <div mock-state-value="{{state}}" mock-state-selector="input">
        <span class="dummy-text-small">{{capitalize state}}:</span>
        <br />
        <Hds::Form::TextInput @value="Lorem ipsum dolor" @isInvalid={{true}} as |C|>
          <C.Label>Lorem ipsum dolor</C.Label>
          <C.Error>This is the error</C.Error>
        </Hds::Form::TextInput>
      </div>
    {{/each}}
  </div>

</section>