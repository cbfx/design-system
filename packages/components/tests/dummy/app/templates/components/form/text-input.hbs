{{page-title "Form::TextInput Component"}}

<h2 class="dummy-h2">Form::TextInput</h2>

<section>
  <h3 class="dummy-h3" id="overview"><a href="#overview">Â§</a> Overview</h3>
  <p class="dummy-paragraph">ðŸš§ TODO ðŸš§</p>
</section>

<section>
  <h3 class="dummy-h3" id="component-api"><a href="#component-api">Â§</a> Component API</h3>
  <p class="dummy-paragraph" id="component-api-form-text-input">
    Here is the API for the component:
  </p>
  <dl class="dummy-component-props" aria-labelledby="component-api-form-text-input">
    <dt>basic <code>boolean</code></dt>
    <dd>
      <p>Controls if the generated control is
        <strong>"basic"</strong>
        (only the
        <code class="dummy-code">&lt;Input&gt;</code>
        control) or a
        <strong>"field"</strong>
        (this is the default: the
        <code class="dummy-code">&lt;Input&gt;</code>
        control, with label, helper text and error, plus a wrapping container).</p>
      <p>Default: <span class="default">false</span></p>
    </dd>
    <dt>type <code>enum</code></dt>
    <dd>
      <p>
        Sets the native HTML
        <code class="dummy-code">type</code>
        of the
        <code class="dummy-code">&lt;input&gt;</code>. This list covers all the official types (see
        <a
          href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"
          target="_blank"
          rel="noopener noreferrer"
        >MDN documentation</a>)
      </p>
      <p>Acceptable values:</p>
      <ol>
        {{#each @model.TYPES as |type|}}
          <li class={{if (eq type "text") "default"}}>{{type}}</li>
        {{/each}}
      </ol>
    </dd>
    <dt>value <code>string|number|date</code></dt>
    <dd>
      <p>The input control's value</p>
    </dd>
    <dt>isInvalid <code>boolean</code></dt>
    <dd>
      <p>It applies an "invalid" appearance to the control (<em>notice: this does _not_ modify its logical validity</em>).</p>
      <p>Default: <span class="default">false</span></p>
    </dd>
    <dt>...attributes</dt>
    <dd>
      <p><code class="dummy-code">...attributes</code> spreading is supported on this component.</p>
      <p><em>Notice: the attributes will be applied to the
          <code class="dummy-code">&lt;Input&gt;</code>
          element, both for the "field" and "basic". This means you can use all the standard Ember techniques for event
          handling, validation, etc.</em></p>
    </dd>
  </dl>

  <h4 class="dummy-h4">Contextual components</h4>
  <p class="dummy-paragraph" id="contextual-components-alert">Label, helper text and error content are passed into the
    control as yielded components, using the
    <code class="dummy-code">Label</code>,
    <code class="dummy-code">HelperText</code>,
    <code class="dummy-code">Error</code>
    keys.</p>
  <dl class="dummy-component-props" aria-labelledby="contextual-components-alert">
    <dt>&lt;[C].Label&gt; <code>yielded component</code></dt>
    <dd>
      <p>It is a container that yields its content inside the <code class="dummy-code">&lt;label&gt;</code> element.</p>
      <p>The content can be a simple string, or a more complex/structured one (in which case it inherits the text
        style).</p>
      <p>For details about its API check the
        <LinkTo @route="components.form.base-elements"><code class="dummy-code">Form::Label</code></LinkTo>
        component.</p>
      <p><em>Notice: the
          <code class="dummy-code">for</code>
          attribute of the label is automatically generated, using the
          <code class="dummy-code">controlId</code>
          value of the control.</em></p>
    </dd>
    <dt>&lt;[C].HelperText&gt; <code>yielded component</code></dt>
    <dd>
      <p>It is a container that yields its content inside the "helper text" block.</p>
      <p>The content can be a simple string, or a more complex/structured one (in which case it inherits the text
        style).</p>
      <p>For details about its API check the
        <LinkTo @route="components.form.base-elements"><code class="dummy-code">Form::HelperText</code></LinkTo>
        component.</p>
      <p><em>Notice: the
          <code class="dummy-code">id</code>
          attribute of the element is automatically generated, using the
          <code class="dummy-code">controlId</code>
          value of the control.</em></p>
    </dd>
    <dt>&lt;[C].Error&gt; <code>yielded component</code></dt>
    <dd>
      <p>ðŸš§ TODO ðŸš§</p>
      <p>For details about its API check the
        <LinkTo @route="components.form.base-elements"><code class="dummy-code">Form::Error</code></LinkTo>
        component.</p>
    </dd>
  </dl>

</section>

<section>
  <h3 class="dummy-h3" id="how-to-use"><a href="#how-to-use" class="dummy-link-section">Â§</a> How to use</h3>
  <p class="dummy-paragraph">ðŸš§ TODO ðŸš§</p>
</section>

<section>
  <h3 class="dummy-h3" id="design-guidelines"><a href="#design-guidelines" class="dummy-link-section">Â§</a>
    Design guidelines</h3>
  <p class="dummy-paragraph">ðŸš§ TODO ðŸš§</p>
  {{! UNCOMMENT THIS BLOCK (once the link and/or the image are available) }}
  {{!
  <div class="dummy-design-guidelines">
    <p class="dummy-paragraph">
      <a href="[ADD THE LINK TO THE FIGMA FILE/PAGE HERE!]" target="_blank" rel="noopener noreferrer">Figma UI Kit</a>
    </p>
    <br />
    <img class="dummy-figma-docs" src="/assets/images/form-text-input-design-usage.png" alt="" role="none" />
  </div>
  }}
</section>

<section>
  <h3 class="dummy-h3" id="accessibility"><a href="#accessibility" class="dummy-link-section">Â§</a> Accessibility</h3>
  <p class="dummy-paragraph">ðŸš§ TODO ðŸš§</p>
</section>

<section data-test-percy>
  <h3 class="dummy-h3" id="showcase"><a href="#showcase" class="dummy-link-section">Â§</a> Showcase</h3>

  <h4 class="dummy-h4">"Base" control</h4>
  <h5 class="dummy-h6">Interaction status</h5>
  <div class="dummy-form-text-input-base-sample">
    <div>
      <span class="dummy-text-small">Default</span>
      <br />
      <Hds::Form::TextInput::Base />
    </div>
    <div>
      <span class="dummy-text-small">With placeholder</span>
      <br />
      <Hds::Form::TextInput::Base placeholder="Lorem ipsum dolor" />
    </div>
    <div>
      <span class="dummy-text-small">With value</span>
      <br />
      <Hds::Form::TextInput::Base @value="Lorem ipsum dolor" />
    </div>
  </div>
  <h5 class="dummy-h5">Types (native)</h5>
  <div class="dummy-form-text-input-types-grid">
    {{#each @model.TYPES as |type|}}
      <div>
        <span class="dummy-text-small">{{capitalize type}}:</span>
        <br />
        <Hds::Form::TextInput::Base @type={{type}} @value={{type}} />
      </div>
    {{/each}}
  </div>
  <h5 class="dummy-h6">States</h5>
  <div class="dummy-form-text-input-grid-sample">
    {{#let (array "base" "disabled" "readonly" "invalid") as |variants|}}
      {{#each variants as |variant|}}
        {{#each @model.STATES as |state|}}
          <div>
            <span class="dummy-text-small">{{capitalize variant}} / {{capitalize state}}:</span>
            <br />
            <div class="dummy-form-text-input-sublist" mock-state-value={{state}} mock-state-selector="input">
              <Hds::Form::TextInput::Base
                disabled={{if (eq variant "disabled") "disabled"}}
                readonly={{if (eq variant "readonly") "readonly"}}
                @isInvalid={{if (eq variant "invalid") true}}
              />
              <Hds::Form::TextInput::Base
                placeholder="Placeholder"
                disabled={{if (eq variant "disabled") "disabled"}}
                readonly={{if (eq variant "readonly") "readonly"}}
                @isInvalid={{if (eq variant "invalid") true}}
              />
              <Hds::Form::TextInput::Base
                @value="Lorem ipsum dolor"
                disabled={{if (eq variant "disabled") "disabled"}}
                readonly={{if (eq variant "readonly") "readonly"}}
                @isInvalid={{if (eq variant "invalid") true}}
              />
            </div>
          </div>
        {{/each}}
      {{/each}}
    {{/let}}
  </div>
  <h5 class="dummy-h6">Custom layout</h5>
  <div class="dummy-form-text-input-base-sample">
    <div>
      <span class="dummy-text-small">With custom layout</span>
      <br />
      <div class="dummy-form-text-input-custom-layout">
        <label for="my-custom-text-input-example">Custom label</label>
        <Hds::Form::TextInput::Base id="my-custom-text-input-example" @value="Lorem ipsum dolor" />
        <span class="dummy-form-text-input-custom-layout__prepend-text">Some content</span>
      </div>
    </div>
  </div>
  <h5 class="dummy-h5">Containers</h5>
  <div class="dummy-form-text-input-containers">
    {{#let (array "block" "flex" "grid") as |displays|}}
      {{#each displays as |display|}}
        <div>
          <span class="dummy-text-small">Parent with <code class="dummy-code">display: {{display}}</code></span>
          <br />
          <div class="dummy-form-text-input-sublist">
            <div class="dummy-form-text-input-containers__{{display}}">
              <Hds::Form::TextInput::Base @value="Lorem ipsum dolor" />
            </div>
            <div class="dummy-form-text-input-containers__block">
              <Hds::Form::TextInput::Base @type="date" />
            </div>
            <div class="dummy-form-text-input-containers__block">
              <Hds::Form::TextInput::Base @type="time" />
            </div>
          </div>
        </div>
      {{/each}}
    {{/let}}
  </div>

  <h4 class="dummy-h4">"Field" control</h4>
  <h5 class="dummy-h5">Content</h5>
  <div class="dummy-form-text-input-grid-sample">
    <div>
      <span class="dummy-text-small">Only label</span>
      <br />
      <Hds::Form::TextInput::Field @value="Lorem ipsum dolor" as |F|>
        <F.Label>This is the label text</F.Label>
      </Hds::Form::TextInput::Field>
    </div>
    <div>
      <span class="dummy-text-small">Label + Helper text</span>
      <br />
      <Hds::Form::TextInput::Field @value="Lorem ipsum dolor" as |F|>
        <F.Label>This is the label text</F.Label>
        <F.HelperText>This is the helper text</F.HelperText>
      </Hds::Form::TextInput::Field>
    </div>
  </div>
  <br />
  <div class="dummy-form-text-input-grid-sample">
    <div>
      <span class="dummy-text-small">Label + Error</span>
      <br />
      <Hds::Form::TextInput::Field @value="Lorem ipsum dolor" as |F|>
        <F.Label>This is the label</F.Label>
        <F.Error>This is the error</F.Error>
      </Hds::Form::TextInput::Field>
    </div>
    <div>
      <span class="dummy-text-small">Label + Helper text + Error</span>
      <br />
      <Hds::Form::TextInput::Field @value="Lorem ipsum dolor" as |F|>
        <F.Label>This is the label</F.Label>
        <F.HelperText>This is the helper text</F.HelperText>
        <F.Error>This is the error</F.Error>
      </Hds::Form::TextInput::Field>
    </div>
    <div>
      <span class="dummy-text-small">Label + Helper text + Errors</span>
      <br />
      <Hds::Form::TextInput::Field as |F|>
        <F.Label>This is the label</F.Label>
        <F.HelperText>This is the helper text</F.HelperText>
        <F.Error as |E|>
          <E.message>First error message</E.message>
          <E.message>Second error message</E.message>
        </F.Error>
      </Hds::Form::TextInput::Field>
    </div>
  </div>
  <h5 class="dummy-h5">Containers</h5>
  <div class="dummy-form-text-input-containers">
    {{#let (array "block" "flex" "grid") as |displays|}}
      {{#each displays as |display|}}
        <div>
          <span class="dummy-text-small">Parent with <code class="dummy-code">display: {{display}}</code></span>
          <br />
          <div class="dummy-form-text-input-containers__{{display}}">
            <Hds::Form::TextInput::Field @value="Lorem ipsum dolor" as |F|>
              <F.Label>This is the label</F.Label>
              <F.HelperText>This is the helper text</F.HelperText>
              <F.Error>This is the error</F.Error>
            </Hds::Form::TextInput::Field>
          </div>
          <br />
          <div class="dummy-form-text-input-containers__{{display}}">
            <Hds::Form::TextInput::Field @value="Lorem ipsum dolor" as |F|>
              <F.Label>This is the label text that should go on multiple lines</F.Label>
              <F.HelperText>This is the helper text that should go on multiple lines</F.HelperText>
              <F.Error as |E|>
                <E.message>This is the first error text</E.message>
                <E.message>This is the second error text that should go on multiple lines</E.message>
              </F.Error>
            </Hds::Form::TextInput::Field>
          </div>
        </div>
      {{/each}}
    {{/let}}
  </div>

</section>